swagger: '2.0'
info:
title: OPENCCML API
version: '0.1'
consumes:
- application/json
produces:
- text/xml
basePath: '/openccml'
paths:
  '/predictETS':
    get:
      operationId: api.predictETS.execute
      parameters: &id001
      - in: query
        default: ''
        type: string
        required: true
        description: 'Response variable and Formulae '
        name: formula
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Predict method for Exponential smoothing state space model
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.predictETS.execute_post
      parameters: *id001
      summary: Predict method for Exponential smoothing state space model
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/shapiro/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.shapiro.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.shapiro.download_post
      response:
        200:
          description: The Turtle file.
  '/linear_regression':
    get:
      operationId: api.linear_regression.execute
      parameters: &id002
      - in: query
        default: ''
        type: string
        required: true
        description: 'Response variable and Formulae '
        name: formula
      - in: query
        default: na.remove
        type: string
        required: true
        description: A function which indicates what should happen when the data
          contain NAs
        name: na__action
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Optional vector of weights to be used in the fitting process.
          If non-NULL, weighted least squares is used with weights weights (that
          is, minimizing sum(w*e^2)); otherwise ordinary least squares is used
        name: weights
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Optional vector specifying a subset of observations to be used
          in the fitting process
        name: subset
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Linear regression is an approach for modeling the relationship between
        a scalar dependent variable y and one or more explanatory variables (or
        independent variables) denoted X. The case of one explanatory variable is
        called simple linear regression.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.linear_regression.execute_post
      parameters: *id002
      summary: Linear regression is an approach for modeling the relationship between
        a scalar dependent variable y and one or more explanatory variables (or
        independent variables) denoted X. The case of one explanatory variable is
        called simple linear regression.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/predictlm':
    get:
      operationId: api.predictlm.execute
      parameters: &id003
      - in: query
        default: ''
        type: string
        required: true
        description: 'Response variable and Formulae '
        name: formula
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Predict method for Linear Model Fits
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.predictlm.execute_post
      parameters: *id003
      summary: Predict method for Linear Model Fits
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/predictRF':
    get:
      operationId: api.predictRF.execute
      parameters: &id004
      - in: query
        default: ''
        type: string
        required: true
        description: 'Response variable and Formulae '
        name: formula
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Predict method for random forest objects
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.predictRF.execute_post
      parameters: *id004
      summary: Predict method for random forest objects
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/predictarima/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictarima.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictarima.download_post
      response:
        200:
          description: The Turtle file.
  '/mlp':
    get:
      operationId: api.mlp.execute
      parameters: &id005
      - in: query
        default: ' '
        type: string
        required: true
        description: the parameters for the learning function.
        name: learnFuncParams
      - in: query
        default: ' '
        type: string
        required: true
        description: sets the activation function of the output units to linear
          or logistic.
        name: linOut
      - in: query
        default: ' '
        type: string
        required: true
        description: the corresponding targets values.
        name: y
      - in: query
        default: ' '
        type: string
        required: true
        description: the parameters for the initialization function.
        name: initFuncParams
      - in: query
        default: ' '
        type: string
        required: true
        description: 'maximum of iterations to learn. '
        name: maxit
      - in: query
        default: ' '
        type: string
        required: true
        description: a matrix with training inputs for the network.
        name: x
      - in: query
        default: ' '
        type: string
        required: true
        description: 'number of units in the hidden layer(s). '
        name: size
      - in: query
        default: ' '
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Create and train a multi-layer perceptron (MLP).
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.mlp.execute_post
      parameters: *id005
      summary: Create and train a multi-layer perceptron (MLP).
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/svm':
    get:
      operationId: api.svm.execute
      parameters: &id006
      - in: query
        default: ' '
        type: string
        required: true
        description: 'Response variable and Formulae '
        name: formula
      - in: query
        default: na.omit
        type: string
        required: true
        description: A function which indicates what should happen when the data
          contain NAs
        name: na__action
      - in: query
        default: na.omit
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Far from being a panacea, SVMs yet represent a powerful technique
        for general (nonlinear) classification, regression and outlier detection
        with an intuitive model representation.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.svm.execute_post
      parameters: *id006
      summary: Far from being a panacea, SVMs yet represent a powerful technique
        for general (nonlinear) classification, regression and outlier detection
        with an intuitive model representation.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/rf/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.rf.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.rf.download_post
      response:
        200:
          description: The Turtle file.
  '/predictRBF/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictRBF.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictRBF.download_post
      response:
        200:
          description: The Turtle file.
  '/neuralnet':
    get:
      operationId: api.neuralnet.execute
      parameters: &id007
      - in: query
        default: ' '
        type: string
        required: true
        description: a differentiable function that is used for the calculation
          of the error. Alternatively, the strings 'sse' and 'ce' which stand for
          the sum of squared errors and the cross-entropy can be used.
        name: err__fct
      - in: query
        default: ' '
        type: string
        required: true
        description: a symbolic description of the model to be fitted.
        name: formula
      - in: query
        default: ' '
        type: string
        required: true
        description: 'logical. If the error function is equal to the negative log-likelihood
          function, the information criteria AIC and BIC will be calculated. Furthermore
          the usage of confidence.interval is meaningfull. '
        name: likelihood
      - in: query
        default: ' '
        type: string
        required: true
        description: logical. If act.fct should not be applied to the output neurons
          set linear output to TRUE, otherwise to FALSE.
        name: linear__output
      - in: query
        default: ' '
        type: string
        required: true
        description: 'a data frame containing the variables specified in formula. '
        name: data
      - in: query
        default: ' '
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Training of neural networks.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.neuralnet.execute_post
      parameters: *id007
      summary: Training of neural networks.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/acf/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.acf.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.acf.download_post
      response:
        200:
          description: The Turtle file.
  '/predictSVM/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictSVM.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictSVM.download_post
      response:
        200:
          description: The Turtle file.
  '/ets/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.ets.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.ets.download_post
      response:
        200:
          description: The Turtle file.
  '/predictRF/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictRF.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictRF.download_post
      response:
        200:
          description: The Turtle file.
  '/acf':
    get:
      operationId: api.acf.execute
      parameters: &id008
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: Should covariances be about the sample means?
        name: demean
      - in: query
        default: 10\u2217log10(N/m)
        type: string
        required: true
        description: Maximum lag at which to calculate the acf. Default is 10\u2217\
          log10(N/m) where N is the number of observations and m the number of series.\
          \ Will be automatically limited to one less than the number of observations\
          \ in the series.
        name: lag__max
      - in: query
        default: na.contiguous
        type: string
        required: true
        description: Function to handle missing values. Default is na.contiguous.
          Useful alternatives are na.pass and na.interp.
        name: na__action
      - in: query
        default: ''
        type: string
        required: true
        description: A univariate or multivariate (not Ccf) numeric time series
          object or a numeric vector or matrix.
        name: x
      - in: query
        default: correlation
        type: string
        required: true
        description: Character string giving the type of acf to be computed. Allowed
          values are 'correlation' (the default), 'covariance' or 'partial'.
        name: var_type
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: Logical. If TRUE (the default) the resulting acf is plotted.
        name: plot
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Fit an Acf, Autocorrelation Function Estimation
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.acf.execute_post
      parameters: *id008
      summary: Fit an Acf, Autocorrelation Function Estimation
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/neuralnet/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.neuralnet.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.neuralnet.download_post
      response:
        200:
          description: The Turtle file.
  '/linear_regression/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.linear_regression.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.linear_regression.download_post
      response:
        200:
          description: The Turtle file.
  '/predictMLP':
    get:
      operationId: api.predictMLP.execute
      parameters: &id009
      - in: query
        default: ''
        type: string
        required: true
        description: 'Response variable and Formulae '
        name: formula
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Predict method for Mulltilayer Perceptron (MLP)
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.predictMLP.execute_post
      parameters: *id009
      summary: Predict method for Mulltilayer Perceptron (MLP)
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/dtw':
    get:
      operationId: api.dtw.execute
      parameters: &id010
      - in: query
        default: ''
        type: string
        required: true
        description: Reference vector, unused if x given as cost matrix
        name: y
      - in: query
        default: ''
        type: string
        required: true
        description: Query vector or local cost matrix
        name: x
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: 'Run the Dynamic Time Warping Algorithm on Two Trajectories '
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.dtw.execute_post
      parameters: *id010
      summary: 'Run the Dynamic Time Warping Algorithm on Two Trajectories '
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/arima/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.arima.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.arima.download_post
      response:
        200:
          description: The Turtle file.
  '/predict':
    get:
      operationId: api.predict.execute
      parameters: &id011
      - in: query
        default: ''
        type: string
        required: true
        description: a model object for which prediction is desired.
        name: model
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Model Predictions
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.predict.execute_post
      parameters: *id011
      summary: Model Predictions
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/cor':
    get:
      operationId: api.cor.execute
      parameters: &id012
      - in: query
        default: pearson
        type: string
        required: true
        description: A character string indicating which correlation coefficient
          (or covariance) is to be computed. One of 'pearson' (default), 'kendall',
          or 'spearman', can be abbreviated.
        name: method
      - in: query
        default: everything
        type: string
        required: true
        description: An optional character string giving a method for computing
          covariances in the presence of missing values. This must be (an abbreviation
          of) one of the strings 'everything', 'all.obs', 'complete.obs', 'na.or.complete',
          or 'pairwise.complete.obs'.
        name: use
      - in: query
        default: 'null'
        type: string
        required: true
        description: NULL (default) or a vector, matrix or data frame with compatible
          dimensions to x. The default is equivalent to y = x (but more efficient).
        name: y
      - in: query
        default: ''
        type: string
        required: true
        description: a numeric vector, matrix or data frame.
        name: x
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Correlation
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.cor.execute_post
      parameters: *id012
      summary: Correlation
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/arima':
    get:
      operationId: api.arima.execute
      parameters: &id013
      - in: query
        default: CSS
        type: string
        required: true
        description: 'Fitting method: maximum likelihood or minimize conditional
          sum-of-squares. The default (unless there are missing values) is to use
          conditional-sum-of-squares to find starting values, then maximum likelihood.'
        name: method
      - in: query
        default: list(order = c(0L, 0L, 0L), period = NA)
        type: string
        required: true
        description: A specification of the seasonal part of the ARIMA model, plus
          the period (which defaults to frequency(x)). This should be a list with
          components order and period, but a specification of just a numeric vector
          of length 3 will be turned into a suitable list with the specification
          as the order.
        name: seasonal
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Optional numeric vector of initial parameter values. Missing
          values will be filled in, by zeroes except for regression coefficients.
          Values already specified in fixed will be ignored.
        name: init
      - in: query
        default: BFGS
        type: string
        required: true
        description: The value passed as the method argument to optim.
        name: optim__method
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: It's a mean/intercept term. The default is TRUE for undifferenced
          series, and it is ignored for ARIMA models with differencing.
        name: include__mean
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Optional numeric vector of the same length as the total number
          of parameters. If supplied, only NA entries in fixed will be varied. transform.pars
          = TRUE will be overridden (with a warning) if any AR parameters are fixed.
          It may be wise to set transform.pars = FALSE when fixing MA parameters,
          especially near non-invertibility.
        name: fixed
      - in: query
        default: '1e6'
        type: string
        required: true
        description: The prior variance (as a multiple of the innovations variance)
          for the past observations in a differenced model. Do not reduce this.
        name: kappa
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Optional vector or matrix of external regressors, which must
          have the same number of rows as x.
        name: xreg
      - in: query
        default: ''
        type: string
        required: true
        description: A univariate time series
        name: x
      - in: query
        default: list()
        type: string
        required: true
        description: List of control parameters for optim.
        name: optim__control
      - in: query
        default: c(0L,0L,0L)
        type: string
        required: true
        description: 'A specification of the non-seasonal part of the ARIMA model:
          the three integer components (p, d, q) are the AR order, the degree of
          differencing, and the MA order.'
        name: order
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: logical; if true, the AR parameters are transformed to ensure
          that they remain in the region of stationarity. Not used for method =
          'CSS'. For method = 'ML', it has been advantageous to set transform.pars
          = FALSE in some cases, see also fixed.
        name: transform__pars
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Fit an ARIMA model to a univariate time series
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.arima.execute_post
      parameters: *id013
      summary: Fit an ARIMA model to a univariate time series
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/predict/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predict.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predict.download_post
      response:
        200:
          description: The Turtle file.
  '/adftest':
    get:
      operationId: api.adftest.execute
      parameters: &id014
      - in: query
        default: stationary
        type: string
        required: true
        description: Indicates the alternative hypothesis and must be one of 'stationary'
          (default) or 'explosive'. You can specify just the initial letter.
        name: alternative
      - in: query
        default: trunc((length(x)-1)^(1/3)))
        type: string
        required: true
        description: The lag order to calculate the test statistic.
        name: k
      - in: query
        default: ''
        type: string
        required: true
        description: A numeric vector or time series.
        name: x
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Fit an Adf.test, Augmented Dickey-Fuller Test
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.adftest.execute_post
      parameters: *id014
      summary: Fit an Adf.test, Augmented Dickey-Fuller Test
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/predictRBF':
    get:
      operationId: api.predictRBF.execute
      parameters: &id015
      - in: query
        default: ''
        type: string
        required: true
        description: 'Response variable and Formulae '
        name: formula
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Predict method for a radial basis function (RBF) network
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.predictRBF.execute_post
      parameters: *id015
      summary: Predict method for a radial basis function (RBF) network
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/ccf':
    get:
      operationId: api.ccf.execute
      parameters: &id016
      - in: query
        default: ''
        type: string
        required: true
        description: A univariate numeric time series object or a numeric vector.
        name: x
      - in: query
        default: correlation
        type: string
        required: true
        description: Character string giving the type of Ccf to be computed. Allowed
          values are 'correlation' (the default) or 'covariance'.
        name: var_type
      - in: query
        default: 10\u2217log10(N/m)
        type: string
        required: true
        description: Maximum lag at which to calculate the Ccf. Default is 10\u2217\
          log10(N/m) where N is the number of observations and m the number of series.\
          \ Will be automatically limited to one less than the number of observations\
          \ in the series.
        name: lag__max
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: Should covariances be about the sample means?
        name: demean
      - in: query
        default: na.contiguous
        type: string
        required: true
        description: Function to handle missing values. Default is na.contiguous.
          Useful alternatives are na.pass and na.interp.
        name: na__action
      - in: query
        default: 10\u2217log10(N/m)
        type: string
        required: true
        description: A univariate numeric time series object or a numeric vector.
        name: y
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: Logical. If TRUE (the default) the resulting Ccf is plotted.
        name: plot
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Fit an Ccf, Cross-Correlation Function Estimation
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.ccf.execute_post
      parameters: *id016
      summary: Fit an Ccf, Cross-Correlation Function Estimation
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/predictlm/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictlm.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictlm.download_post
      response:
        200:
          description: The Turtle file.
  '/jarque/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.jarque.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.jarque.download_post
      response:
        200:
          description: The Turtle file.
  '/cor/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.cor.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.cor.download_post
      response:
        200:
          description: The Turtle file.
  '/jarque':
    get:
      operationId: api.jarque.execute
      parameters: &id017
      - in: query
        default: ''
        type: string
        required: true
        description: A numeric vector or time series.
        name: x
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Fit a Jarque Bera Test.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.jarque.execute_post
      parameters: *id017
      summary: Fit a Jarque Bera Test.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/predictnnet':
    get:
      operationId: api.predictnnet.execute
      parameters: &id018
      - in: query
        default: ''
        type: string
        required: true
        description: 'Response variable and Formulae '
        name: formula
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Predict method for a Neural Networks.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.predictnnet.execute_post
      parameters: *id018
      summary: Predict method for a Neural Networks.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/rbf':
    get:
      operationId: api.rbf.execute
      parameters: &id019
      - in: query
        default: ' '
        type: string
        required: true
        description: the parameters for the initialization function.
        name: initFuncParams
      - in: query
        default: ' '
        type: string
        required: true
        description: sets the activation function of the output units to linear
          or logistic.
        name: linOut
      - in: query
        default: ' '
        type: string
        required: true
        description: 'maximum of iterations to learn. '
        name: maxit
      - in: query
        default: ' '
        type: string
        required: true
        description: 'number of units in the hidden layer(s). '
        name: size
      - in: query
        default: ' '
        type: string
        required: true
        description: the parameters for the learning function.
        name: learnFuncParams
      - in: query
        default: ' '
        type: string
        required: true
        description: the corresponding targets values.
        name: y
      - in: query
        default: ' '
        type: string
        required: true
        description: a matrix with training inputs for the network.
        name: x
      - in: query
        default: ' '
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Create and train a radial basis function (RBF) network.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.rbf.execute_post
      parameters: *id019
      summary: Create and train a radial basis function (RBF) network.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/adftest/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.adftest.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.adftest.download_post
      response:
        200:
          description: The Turtle file.
  '/predictMLP/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictMLP.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictMLP.download_post
      response:
        200:
          description: The Turtle file.
  '/autoarima/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.autoarima.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.autoarima.download_post
      response:
        200:
          description: The Turtle file.
  '/pacf':
    get:
      operationId: api.pacf.execute
      parameters: &id020
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: Should covariances be about the sample means?
        name: demean
      - in: query
        default: 10\u2217log10(N/m)
        type: string
        required: true
        description: Maximum lag at which to calculate the Pacf. Default is 10\u2217\
          log10(N/m) where N is the number of observations and m the number of series.\
          \ Will be automatically limited to one less than the number of observations\
          \ in the series.
        name: lag__max
      - in: query
        default: ''
        type: string
        required: true
        description: A univariate or multivariate (not Ccf) numeric time series
          object or a numeric vector or matrix.
        name: x
      - in: query
        default: correlation
        type: string
        required: true
        description: Character string giving the type of Pacf to be computed. Allowed
          values are 'correlation' (the default), 'covariance' or 'partial'.
        name: var_type
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: Logical. If TRUE (the default) the resulting Pacf is plotted.
        name: plot
      - in: query
        default: na.contiguous
        type: string
        required: true
        description: Function to handle missing values. Default is na.contiguous.
          Useful alternatives are na.pass and na.interp.
        name: na__action
      - in: query
        default: na.contiguous
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Fit an Pacf, Partial Autocorrelation Function Estimation
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.pacf.execute_post
      parameters: *id020
      summary: Fit an Pacf, Partial Autocorrelation Function Estimation
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/stl':
    get:
      operationId: api.stl.execute
      parameters: &id021
      - in: query
        default: ''
        type: string
        required: true
        description: Logical indicating if robust fitting be used in the loess procedure.
        name: robust
      - in: query
        default: ' '
        type: string
        required: true
        description: Either the character string 'periodic' or the span (in lags)
          of the loess window for seasonal extraction, which should be odd and at
          least 7, according to Cleveland et al. This has no default.
        name: s__window
      - in: query
        default: nextodd(ceiling((1.5*period)/(1-(1.5/s.window))))
        type: string
        required: true
        description: The span (in lags) of the loess window for trend extraction,
          which should be odd.
        name: t__window
      - in: query
        default: ' '
        type: string
        required: true
        description: Univariate time series to be decomposed. This should be an
          object of class 'ts' with a frequency greater than one.
        name: x
      - in: query
        default: ''
        type: string
        required: true
        description: Integers at least one to increase speed of the respective smoother.
        name: t__jump
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Seasonal Decomposition of Time Series by Loess.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.stl.execute_post
      parameters: *id021
      summary: Seasonal Decomposition of Time Series by Loess.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/shapiro':
    get:
      operationId: api.shapiro.execute
      parameters: &id022
      - in: query
        default: ''
        type: string
        required: true
        description: A numeric vector of data values. Missing values are allowed,
          but the number of non-missing values must be between 3 and 5000.
        name: x
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Fit a Shapiro-Wilk Normality Test.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.shapiro.execute_post
      parameters: *id022
      summary: Fit a Shapiro-Wilk Normality Test.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/box/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.box.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.box.download_post
      response:
        200:
          description: The Turtle file.
  '/catalog':
    get:
      operationId: api.catalog.execute
      summary: Returns the complete catalog
      produces:
      - application/json
      type: string
      response:
        200:
          description: JSON containing the catalog.
  '/predictarima':
    get:
      operationId: api.predictarima.execute
      parameters: &id023
      - in: query
        default: c(0L,0L,0L)
        type: string
        required: true
        description: 'A specification of the non-seasonal part of the ARIMA model:
          the three integer components (p, d, q) are the AR order, the degree of
          differencing, and the MA order.'
        name: order
      - in: query
        default: ''
        type: string
        required: true
        description: a time series.
        name: x
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Model Predictions
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.predictarima.execute_post
      parameters: *id023
      summary: Model Predictions
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/ets':
    get:
      operationId: api.ets.execute
      parameters: &id024
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Box-Cox transformation parameter. Ignored if NULL. Otherwise,
          data transformed before model is estimated.
        name: var_lambda
      - in: query
        default: ZZZ
        type: string
        required: true
        description: Usually a three-character string identifying method using the
          framework terminology of Hyndman et al. (2002) and Hyndman et al. (2008).
          The first letter denotes the error type ('A', 'M' or 'Z'); the second
          letter denotes the trend type ('N','A','M' or 'Z'); and the third letter
          denotes the season type ('N','A','M' or 'Z'). In all cases, 'N'=none,
          'A'=additive, 'M'=multiplicative and 'Z'=automatically selected.
        name: model
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Value of beta. If NULL, it is estimated
        name: beta
      - in: query
        default: 'FALSE'
        type: string
        required: true
        description: If TRUE, will only consider additive models. Default is FALSE.
        name: additive__only
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: If TRUE (default), the models with infinite variance will not
          be allowed.
        name: restrict
      - in: query
        default: ''
        type: string
        required: true
        description: Lower bounds for the parameters (alpha, beta, gamma, phi)
        name: lower
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: If TRUE, use a damped trend (either additive or multiplicative).
          If NULL, both damped and non-damped trends will be tried and the best
          model (according to the information criterion ic) returned.
        name: damped
      - in: query
        default: ''
        type: string
        required: true
        description: Number of steps for average multistep MSE (1<=nmse).
        name: nmse
      - in: query
        default: ''
        type: string
        required: true
        description: Upper bounds for the parameters (alpha, beta, gamma, phi)
        name: upper
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Value of gamma. If NULL, it is estimated
        name: gamma
      - in: query
        default: 'FALSE'
        type: string
        required: true
        description: Use adjusted back-transformed mean for Box-Cox transformations.
          If TRUE, point forecasts and fitted values are mean forecast. Otherwise,
          these points can be considered the median of the forecast densities.
        name: biasadj
      - in: query
        default: lik
        type: string
        required: true
        description: Optimization criterion. One of 'mse' (Mean Square Error), 'amse'
          (Average MSE over first nmse forecast horizons), 'sigma' (Standard deviation
          of residuals), 'mae' (Mean of absolute residuals), or 'lik' (Log-likelihood,
          the default).
        name: opt__crit
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Value of phi. If NULL, it is estimated
        name: phi
      - in: query
        default: 'FALSE'
        type: string
        required: true
        description: If TRUE and model is of class 'ets', then the initial values
          in the model are also not re-estimated.
        name: use__initial__values
      - in: query
        default: both
        type: string
        required: true
        description: Type of parameter space to impose, 'usual' indicates all parameters
          must lie between specified lower and upper bounds, 'admissible' indicates
          parameters must lie in the admissible space, 'both' (default) takes the
          intersection of these regions.
        name: bounds
      - in: query
        default: ''
        type: string
        required: true
        description: Information criterion to be used in model selection, 'aicc',
          'aic', 'bic'
        name: ic
      - in: query
        default: ''
        type: string
        required: true
        description: a numeric vector or time series
        name: y
      - in: query
        default: 'FALSE'
        type: string
        required: true
        description: If TRUE, models with multiplicative trend are allowed when
          searching for a model. Otherwise, the model space excludes them. This
          argument is ignored if a multiplicative trend model is explicitly requested
        name: allow__multiplicative__trend
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Value of alpha. If NULL, it is estimated
        name: alpha
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Fit an Exponential smoothing state space model
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.ets.execute_post
      parameters: *id024
      summary: Fit an Exponential smoothing state space model
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/box':
    get:
      operationId: api.box.execute
      parameters: &id025
      - in: query
        default: Ljung
        type: string
        required: true
        description: 'Test to be performed: partial matching is used. Box (default)
          or Ljung.'
        name: var_type
      - in: query
        default: ''
        type: string
        required: true
        description: Number of degrees of freedom to be subtracted if x is a series
          of residuals.
        name: fitdf
      - in: query
        default: ''
        type: string
        required: true
        description: A numeric vector or time series.
        name: x
      - in: query
        default: ''
        type: string
        required: true
        description: The statistic will be based on lag autocorrelation coefficients.
        name: lag
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Fit a Box-Pierce and Ljung-Box Tests.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.box.execute_post
      parameters: *id025
      summary: Fit a Box-Pierce and Ljung-Box Tests.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/autoarima':
    get:
      operationId: api.autoarima.execute
      parameters: &id026
      - in: query
        default: ''
        type: string
        required: true
        description: Maximum value of q
        name: max__q
      - in: query
        default: ''
        type: string
        required: true
        description: Starting value of Q in stepwise procedure.
        name: start__Q
      - in: query
        default: ''
        type: string
        required: true
        description: Allows the user to specify the amount of parallel processes
          to be used if parallel = TRUE and stepwise = FALSE. If NULL, then the
          number of logical cores is automatically detected and all available cores
          are used.
        name: num__cores
      - in: query
        default: ''
        type: string
        required: true
        description: If TRUE, restricts search to stationary models.
        name: stationary
      - in: query
        default: ''
        type: string
        required: true
        description: Type of unit root test to use, 'kpss', 'adf' or 'pp'. 
        name: test
      - in: query
        default: 'FALSE'
        type: string
        required: true
        description: Use adjusted back-transformed mean for Box-Cox transformations.
          If TRUE, point forecasts and fitted values are mean forecast. Otherwise,
          these points can be considered the median of the forecast densities.
        name: biasadj
      - in: query
        default: 'FALSE'
        type: string
        required: true
        description: If TRUE and stepwise = FALSE, then the specification search
          is done in parallel. This can give a significant speedup on mutlicore
          machines.
        name: parallel
      - in: query
        default: ''
        type: string
        required: true
        description: If FALSE, restricts search to non-seasonal models.
        name: seasonal
      - in: query
        default: ''
        type: string
        required: true
        description: Maximum value of p
        name: max__p
      - in: query
        default: NA
        type: string
        required: true
        description: Order of seasonal-differencing. If missing, will choose a value
          based on OCSB test.
        name: D
      - in: query
        default: ''
        type: string
        required: true
        description: Maximum value of P
        name: max__P
      - in: query
        default: ''
        type: string
        required: true
        description: Starting value of q in stepwise procedure.
        name: start__q
      - in: query
        default: ''
        type: string
        required: true
        description: Maximum number of non-seasonal differences
        name: max__d
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: If TRUE, models with a non-zero mean are considered.
        name: allowmean
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: If TRUE, estimation is via conditional sums of squares andthe
          information criteria used for model selection are approximated. The final
          model is still computed using maximum likelihood estimation. Approximation
          should be used for long time series or a high seasonal period to avoid
          excessive computation times.
        name: approximation
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Maximum value of Q
        name: max__Q
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Box-Cox transformation parameter. Ignored if NULL. Otherwise,
          data transformed before model is estimated.
        name: var_lambda
      - in: query
        default: ''
        type: string
        required: true
        description: This determines which seasonal unit root test is used, 'ocsb'\
          \ or 'ch' . 
        name: seasonal__test
      - in: query
        default: NA
        type: string
        required: true
        description: Order of first-differencing. If missing, will choose a value
          based on KPSS test.
        name: d
      - in: query
        default: ''
        type: string
        required: true
        description: Starting value of P in stepwise procedure.
        name: start__P
      - in: query
        default: ''
        type: string
        required: true
        description: Information criterion to be used in model selection, 'aicc',
          'aic', 'bic'
        name: ic
      - in: query
        default: ''
        type: string
        required: true
        description: A univariate time series
        name: y
      - in: query
        default: ''
        type: string
        required: true
        description: Starting value of p in stepwise procedure.
        name: start__p
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: An integer value indicating how many observations to use in
          model selection. The last truncate values of the series are used to select
          a model when truncate is not NULL and approximation=TRUE. All observations
          are used if either truncate=NULL or approximation=FALSE.
        name: truncate
      - in: query
        default: ''
        type: string
        required: true
        description: Maximum value of p+q+P+Q if model selection is not stepwise.
        name: max__order
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Optionally, a vector or matrix of external regressors, which
          must have the same number of rows as y.
        name: xreg
      - in: query
        default: ''
        type: string
        required: true
        description: Maximum number of seasonal differences
        name: max__D
      - in: query
        default: ''
        type: string
        required: true
        description: If TRUE, the list of ARIMA models considered will be reported.
        name: trace
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: If TRUE, models with drift terms are considered.
        name: allowdrift
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: if TRUE, will do stepwise selection (faster). Otherwise, it
          searches over all models. Non-stepwise selection can be very slow, especially
          for seasonal models.
        name: stepwise
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Fit best ARIMA model to univariate time series
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.autoarima.execute_post
      parameters: *id026
      summary: Fit best ARIMA model to univariate time series
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/rf':
    get:
      operationId: api.rf.execute
      parameters: &id027
      - in: query
        default: 'TRUE'
        type: string
        required: true
        description: If TRUE (default), the final result of votes are expressed
          as fractions. If FALSE, raw vote counts are returned (useful for combining
          results from different runs). Ignored for regression.
        name: norm__votes
      - in: query
        default: ''
        type: string
        required: true
        description: Minimum size of terminal nodes. Setting this number larger
          causes smaller trees to be grown (and thus take less time). Note that
          the default values are different for classification (1) and regression
          (5).
        name: nodesize
      - in: query
        default: remove
        type: string
        required: true
        description: A function which indicates what should happen when the data
          contain NAs
        name: na__action
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Priors of the classes. Need not add up to one. Ignored for
          regression.
        name: classwt
      - in: query
        default: ''
        type: string
        required: true
        description: Number of variables randomly sampled as candidates at each
          split. Note that the default values are different for classification (sqrt(p)
          where p is number of variables in x) and regression (p/3)
        name: mtry
      - in: query
        default: ' '
        type: string
        required: true
        description: 'Response variable and Formulae '
        name: formula
      - in: query
        default: ''
        type: string
        required: true
        description: Should proximity measure among the rows be calculated?
        name: proximity
      - in: query
        default: 'FALSE'
        type: string
        required: true
        description: Should an n by ntree matrix be returned that keeps track of
          which samples are ``in-bag'' in which trees (but not how many times, if
          sampling with replacement)
        name: keep__inbag
      - in: query
        default: 'FALSE'
        type: string
        required: true
        description: Should casewise importance measure be computed? (Setting this
          to TRUE will override importance.)
        name: localImp
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Optional vector specifying a subset of observations to be used
          in the fitting process
        name: subset
      - in: query
        default: 'FALSE'
        type: string
        required: true
        description: Should importance of predictors be assessed?
        name: importance
      - in: query
        default: ''
        type: string
        required: true
        description: If set to FALSE, the forest will not be retained in the output
          object. If xtest is given, defaults to FALSE.
        name: keep__forest
      - in: query
        default: 'true'
        type: string
        required: true
        description: Should sampling of cases be done with or without replacement?
        name: replace
      - in: query
        default: ''
        type: string
        required: true
        description: Size(s) of sample to draw. For classification, if sampsize
          is a vector of the length the number of strata, then sampling is stratified
          by strata, and the elements of sampsize indicate the numbers to be drawn
          from the strata.
        name: sampsize
      - in: query
        default: ''
        type: string
        required: true
        description: (Classification only) A vector of length equal to number of
          classes. The `winning' class for an observation is the one with the maximum
          ratio of proportion of votes to cutoff. Default is 1/k where k is the
          number of classes (i.e., majority vote wins).
        name: cutoff
      - in: query
        default: '500'
        type: string
        required: true
        description: Number of trees to grow. This should not be set to too small
          a number, to ensure that every input row gets predicted at least a few
          times.
        name: ntree
      - in: query
        default: 'NULL'
        type: string
        required: true
        description: Maximum number of terminal nodes trees in the forest can have.
          If not given, trees are grown to the maximum possible (subject to limits
          by nodesize). If set larger than maximum possible, a warning is issued.
        name: maxnodes
      - in: query
        default: '1'
        type: string
        required: true
        description: Number of times the OOB data are permuted per tree for assessing
          variable importance. Number larger than 1 gives slightly more stable estimate,
          but not very effective. Currently only implemented for regression.
        name: nPerm
      - in: query
        default: ''
        type: string
        required: true
        description: Should proximity be calculated only on ``out-of-bag'' data?
        name: oob__prox
      - in: query
        default: ''
        type: string
        required: true
        description: A (factor) variable that is used for stratified sampling.
        name: strata
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Implements Breiman's random forest algorithm (based on Breiman and
        Cutler's original Fortran code) for classification and regression. It can
        also be used in unsupervised mode for assessing proximities among data points.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.rf.execute_post
      parameters: *id027
      summary: Implements Breiman's random forest algorithm (based on Breiman and
        Cutler's original Fortran code) for classification and regression. It can
        also be used in unsupervised mode for assessing proximities among data points.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/nnet':
    get:
      operationId: api.nnet.execute
      parameters: &id028
      - in: query
        default: ' '
        type: string
        required: true
        description: 'Number of units in the hidden layer. Can be zero if there
          are skip-layer units. '
        name: size
      - in: query
        default: na.omit
        type: string
        required: true
        description: A function to specify the action to be taken if NAs are found.
          The default action is for the procedure to fail. An alternative is na.omit,
          which leads to rejection of cases with missing values on any required
          variable.
        name: na__action
      - in: query
        default: ' '
        type: string
        required: true
        description: An index vector specifying the cases to be used in the training
          sample.
        name: subset
      - in: query
        default: '100'
        type: string
        required: true
        description: Maximum number of iterations. Default 100.
        name: maxit
      - in: query
        default: '0'
        type: string
        required: true
        description: Parameter for weight decay. Default 0.
        name: decay
      - in: query
        default: ' '
        type: string
        required: true
        description: Data frame from which variables specified in formula are preferentially
          to be taken.
        name: data
      - in: query
        default: ' '
        type: string
        required: true
        description: 'A formula of the form class ~ x1 + x2 + ... '
        name: formula
      - in: query
        default: ' '
        type: string
        required: true
        description: 'Initial random weights on [-rang, rang]. Value about 0.5 unless
          the inputs are large, in which case it should be chosen so that rang *
          max(|x|) is about 1. '
        name: rang
      - in: query
        default: ' '
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Fit Neural Networks.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.nnet.execute_post
      parameters: *id028
      summary: Fit Neural Networks.
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/ccf/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.ccf.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.ccf.download_post
      response:
        200:
          description: The Turtle file.
  '/predictSVM':
    get:
      operationId: api.predictSVM.execute
      parameters: &id029
      - in: query
        default: ''
        type: string
        required: true
        description: 'Response variable and Formulae '
        name: formula
      - in: query
        default: ''
        type: string
        required: true
        description: Dataset on which the service is applied
        name: dataset
      summary: Predict method for Support Vector Machines (SVM)
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      operationId: api.predictSVM.execute_post
      parameters: *id029
      summary: Predict method for Support Vector Machines (SVM)
      type: string
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
  '/mlp/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.mlp.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.mlp.download_post
      response:
        200:
          description: The Turtle file.
  '/predictETS/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictETS.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictETS.download_post
      response:
        200:
          description: The Turtle file.
  '/predictnnet/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictnnet.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.predictnnet.download_post
      response:
        200:
          description: The Turtle file.
  '/rbf/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.rbf.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.rbf.download_post
      response:
        200:
          description: The Turtle file.
  '/dtw/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.dtw.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.dtw.download_post
      response:
        200:
          description: The Turtle file.
  '/pacf/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.pacf.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.pacf.download_post
      response:
        200:
          description: The Turtle file.
  '/nnet/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.nnet.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.nnet.download_post
      response:
        200:
          description: The Turtle file.
  '/svm/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.svm.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.svm.download_post
      response:
        200:
          description: The Turtle file.
  '/stl/download':
    get:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.stl.download
      response:
        200:
          description: Output of the service contains Model or ModelEvaluation or
            Data
    post:
      parameters:
      - in: query
        default: ttl
        type: string
        required: 'true'
        description: asdasd
        name: file_format
      summary: Returns the service definition in the specified format.
      produces:
      - application/binary
      type: string
      operationId: api.stl.download_post
      response:
        200:
          description: The Turtle file.
